// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	context "context"

	order_entity "github.com/jfelipearaujo-org/ms-order-management/internal/entity/order_entity"
	mock "github.com/stretchr/testify/mock"
)

// MockUpdateOrderService is an autogenerated mock type for the UpdateOrderService type
type MockUpdateOrderService[T interface{}] struct {
	mock.Mock
}

// Handle provides a mock function with given fields: ctx, order, request
func (_m *MockUpdateOrderService[T]) Handle(ctx context.Context, order *order_entity.Order, request T) error {
	ret := _m.Called(ctx, order, request)

	if len(ret) == 0 {
		panic("no return value specified for Handle")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *order_entity.Order, T) error); ok {
		r0 = rf(ctx, order, request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockUpdateOrderService creates a new instance of MockUpdateOrderService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUpdateOrderService[T interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUpdateOrderService[T] {
	mock := &MockUpdateOrderService[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
